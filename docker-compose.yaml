services:
  backend:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile
    container_name: rplan-backend
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PG_URL: postgresql://${PG_RPLAN_USER}:${PG_RPLAN_PASSWORD}@postgres:5432/${PG_DB}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_AUTH_USER: ${SMTP_AUTH_USER}
      SMTP_AUTH_PASS: ${SMTP_AUTH_PASS}
      SALT_ROUNDS: ${SALT_ROUNDS}
      AUTH_SECRET_KEY: ${AUTH_SECRET_KEY}
      PASSWORD_FORGOTTEN_SECRET_KEY: ${PASSWORD_FORGOTTEN_SECRET_KEY}
      EMAIL_VALIDATION_SECRET_KEY: ${EMAIL_VALIDATION_SECRET_KEY}
      TOKEN_PASSWORD_FORGOTTEN_EXPIRATION: ${TOKEN_PASSWORD_FORGOTTEN_EXPIRATION}
      COOKIE_NAME: ${COOKIE_NAME}
      COOKIE_BIS_NAME: ${COOKIE_BIS_NAME}
      COOKIE_EXPIRATION: ${COOKIE_EXPIRATION}
    depends_on:
      - postgres
    volumes:
      - ./packages/backend:/app/packages/backend
      - /app/node_modules
    command: yarn dev:backend

  frontend:
    build:
      context: .
      dockerfile: ./packages/frontend/Dockerfile
    container_name: rplan-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./packages/frontend:/app/packages/frontend
      - /app/node_modules
    command: yarn dev:frontend

  postgres:
    image: postgres:15-alpine
    container_name: rplan-db
    environment:
      POSTGRES_USER: ${PG_RPLAN_USER}
      POSTGRES_PASSWORD: ${PG_RPLAN_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_RPLAN_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  maildev:
    image: maildev/maildev:2.1.0
    container_name: maildev
    ports:
      - "1080:1080"
      - "1025:1025"

  pghero:
    image: ankane/pghero
    container_name: pghero
    environment:
      - DATABASE_URL=postgresql://${PG_RPLAN_USER}:${PG_RPLAN_PASSWORD}@postgres:5432/${PG_DB}
    ports:
      - "8080:8080"
    depends_on:
      - postgres

volumes:
  pgdata:
